@page "/registro"
@using System.ComponentModel.DataAnnotations
@using NominaSystem.UI.Models
@using NominaSystem.UI.Services.Interfaces
@inject IAuthService AuthService
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="card shadow p-4" style="width: 100%; max-width: 400px;">
        <h3 class="text-center mb-4">Registro de Usuario</h3>

        <EditForm Model="registroModel" OnValidSubmit="HandleRegistro">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label>Nombre de Usuario</label>
                <InputText @bind-Value="registroModel.UsuarioNombre" class="form-control" />
            </div>

            <div class="mb-3">
                <label>Contraseña</label>
                <InputText type="password" @bind-Value="registroModel.Contrasena" class="form-control" />
            </div>

            <button class="btn btn-success w-100" type="submit">Registrarse</button>

            <div class="mt-3 text-center">
                ¿Ya tienes una cuenta?
                <a href="login" class="link-primary">Iniciar Sesión</a>
            </div>

            @if (!string.IsNullOrEmpty(mensaje))
            {
                <div class="alert alert-info mt-3">@mensaje</div>
            }
        </EditForm>
    </div>
</div>


@code {
    private RegisterRequest registroModel = new();
    private string? mensaje;

    private async Task HandleRegistro()
    {
        try
        {
            var exito = await AuthService.RegistrarAsync(registroModel);

            if (exito)
            {
                mensaje = "Registro exitoso. Puedes iniciar sesión.";
                Navigation.NavigateTo("/login");
            }
            else
            {
                mensaje = "No se pudo completar el registro.";
            }
        }
        catch (Exception ex)
        {
            mensaje = $"Error: {ex.Message}";
        }
    }
}

