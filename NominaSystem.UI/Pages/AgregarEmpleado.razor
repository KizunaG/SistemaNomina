@page "/empleados/agregar"
@inject HttpClient Http
@inject NavigationManager Navigation
@using System.ComponentModel.DataAnnotations

<h3>Agregar Empleado</h3>

<EditForm Model="nuevoEmpleado" OnValidSubmit="GuardarEmpleado">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>Nombre:</label>
        <InputText class="form-control" @bind-Value="nuevoEmpleado.Nombre" />
        <ValidationMessage For="@(() => nuevoEmpleado.Nombre)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label>DPI:</label>
        <InputText class="form-control" @bind-Value="nuevoEmpleado.Dpi" />
        <ValidationMessage For="@(() => nuevoEmpleado.Dpi)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label>Teléfono:</label>
        <InputText class="form-control" @bind-Value="nuevoEmpleado.Telefono" />
        <ValidationMessage For="@(() => nuevoEmpleado.Telefono)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label>Estado Laboral:</label>
        <InputSelect class="form-control" @bind-Value="nuevoEmpleado.EstadoLaboral">
            <option value="">-- Seleccionar estado --</option>
            <option value="Activo">Activo</option>
            <option value="Inactivo">Inactivo</option>
        </InputSelect>
        <ValidationMessage For="@(() => nuevoEmpleado.EstadoLaboral)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label>Dirección:</label>
        <InputText class="form-control" @bind-Value="nuevoEmpleado.Direccion" />
        <ValidationMessage For="@(() => nuevoEmpleado.Direccion)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label>Fecha de Ingreso:</label>
        <InputDate class="form-control" @bind-Value="nuevoEmpleado.FechaIngreso" />
        <ValidationMessage For="@(() => nuevoEmpleado.FechaIngreso)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label>ID Cargo:</label>
        <InputNumber class="form-control" @bind-Value="nuevoEmpleado.ID_Cargo" />
        <ValidationMessage For="@(() => nuevoEmpleado.ID_Cargo)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label>ID Departamento:</label>
        <InputNumber class="form-control" @bind-Value="nuevoEmpleado.ID_Departamento" />
        <ValidationMessage For="@(() => nuevoEmpleado.ID_Departamento)" class="text-danger" />
    </div>

    <button type="submit" class="btn btn-success">Guardar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    private Empleado nuevoEmpleado = new();

    private async Task GuardarEmpleado()
    {
        await Http.PostAsJsonAsync("api/Empleados", nuevoEmpleado);
        Navigation.NavigateTo("/empleados");
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/empleados");
    }

    public class Empleado
    {
        public int Id { get; set; }

        [Required(ErrorMessage = "El nombre es obligatorio")]
        [StringLength(100, ErrorMessage = "El nombre no puede exceder 100 caracteres")]
        public string Nombre { get; set; } = string.Empty;

        [Required(ErrorMessage = "El DPI es obligatorio")]
        [RegularExpression(@"^\d{13}$", ErrorMessage = "El DPI debe tener 13 dígitos")]
        public string Dpi { get; set; } = string.Empty;

        [Required(ErrorMessage = "El teléfono es obligatorio")]
        [Phone(ErrorMessage = "Debe ser un número de teléfono válido")]
        public string Telefono { get; set; } = string.Empty;

        [Required(ErrorMessage = "Debe seleccionar un estado laboral")]
        public string EstadoLaboral { get; set; } = string.Empty;

        [Required(ErrorMessage = "La dirección es obligatoria")]
        public string Direccion { get; set; } = string.Empty;

        [Required(ErrorMessage = "Debe seleccionar una fecha válida")]
        public DateTime FechaIngreso { get; set; } = DateTime.Today;

        [Range(1, int.MaxValue, ErrorMessage = "Debe seleccionar un cargo válido")]
        public int ID_Cargo { get; set; }

        [Range(1, int.MaxValue, ErrorMessage = "Debe seleccionar un departamento válido")]
        public int ID_Departamento { get; set; }
    }
}


